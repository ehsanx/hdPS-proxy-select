# Apply propensity score weighting using WeightIt with SuperLearner
weightit_fit <- weightit(ps_formula,
data = ObsData,
stabilize = TRUE,
method = "ps",
estimand = "ATE")
library(WeightIt)
library(SuperLearner)
library(sandwich)
library(lmtest)
data_dir <- "C:\\Users\\Ehsan\\Documents\\GitHub\\Dragonnet-PS\\data\\RHC\\OR1"  # Directory containing CSV files
file_path <- paste(data_dir, "data_1.csv", sep = "\\")
ObsData <- read.csv(file_path)
ObsData.noYA <- ObsData[ , !(names(ObsData) %in% c("death", "tx", "id"))]
main_effects <- names(ObsData.noYA)
rhsformula <- paste(main_effects, collapse = " + ")
ps_formula <- as.formula(paste("tx ~", rhsformula))
# Apply propensity score weighting using WeightIt with SuperLearner
weightit_fit <- weightit(ps_formula,
data = ObsData,
stabilize = TRUE,
method = "ps",
estimand = "ATE")
# Extract weights from the fit
weights <- weightit_fit$weights
# Construct the formula for the outcome model (death ~ tx + covariates)
outcome_formula <- as.formula(paste("death ~ tx +", rhsformula))
# Estimate ATE using the weighted outcomes with glm (note the correction in family)
ate_model <- glm(outcome_formula, data = ObsData, weights = weights,
family = gaussian("identity"))
# Extract ATE estimate and standard error
ate_estimate <- coef(ate_model)["tx"]
se_ate <- sqrt(sandwich::sandwich(ate_model)["tx","tx"])
#conf.int <- confint(ate_model, "tx", level = 0.95, method = "hc1")
method.name <- "PSw"
Return.obj <- data.frame(
ate_estimate = ate_estimate,
se_ate = se_ate,
# lower_ci = conf.int[1],
# upper_ci = conf.int[2],
method.name = method.name
)
Return.obj
summary(weights)
?trim
library(WeightIt)
library(SuperLearner)
library(sandwich)
library(lmtest)
data_dir <- "C:\\Users\\Ehsan\\Documents\\GitHub\\Dragonnet-PS\\data\\RHC\\OR1"  # Directory containing CSV files
file_path <- paste(data_dir, "data_1.csv", sep = "\\")
ObsData <- read.csv(file_path)
ObsData.noYA <- ObsData[ , !(names(ObsData) %in% c("death", "tx", "id"))]
main_effects <- names(ObsData.noYA)
rhsformula <- paste(main_effects, collapse = " + ")
ps_formula <- as.formula(paste("tx ~", rhsformula))
# Apply propensity score weighting using WeightIt with SuperLearner
weightit_fit <- weightit(ps_formula,
data = ObsData,
stabilize = TRUE,
method = "ps",
estimand = "ATE")
# Extract weights from the fit
weights <- weightit_fit$weights
summary(weights)
weights.trim <- trim(W, at = .01) # update as it was used in other methods to make it comparable
library(WeightIt)
library(SuperLearner)
library(sandwich)
library(lmtest)
data_dir <- "C:\\Users\\Ehsan\\Documents\\GitHub\\Dragonnet-PS\\data\\RHC\\OR1"  # Directory containing CSV files
file_path <- paste(data_dir, "data_1.csv", sep = "\\")
ObsData <- read.csv(file_path)
ObsData.noYA <- ObsData[ , !(names(ObsData) %in% c("death", "tx", "id"))]
main_effects <- names(ObsData.noYA)
rhsformula <- paste(main_effects, collapse = " + ")
ps_formula <- as.formula(paste("tx ~", rhsformula))
# Apply propensity score weighting using WeightIt with SuperLearner
weightit_fit <- weightit(ps_formula,
data = ObsData,
stabilize = TRUE,
method = "ps",
estimand = "ATE")
# Extract weights from the fit
weights <- weightit_fit$weights
summary(weights)
weights.trim <- trim(weights, at = .01) # update as it was used in other methods to make it comparable
summary(weights.trim)
# Construct the formula for the outcome model (death ~ tx + covariates)
outcome_formula <- as.formula(paste("death ~ tx +", rhsformula))
# Estimate ATE using the weighted outcomes with glm (note the correction in family)
ate_model <- glm(outcome_formula,
data = ObsData,
weights = weights.trim,
family = gaussian("identity"))
# Extract ATE estimate and standard error
ate_estimate <- coef(ate_model)["tx"]
se_ate <- sqrt(sandwich::sandwich(ate_model)["tx","tx"])
#conf.int <- confint(ate_model, "tx", level = 0.95, method = "hc1")
method.name <- "PSw"
Return.obj <- data.frame(
ate_estimate = ate_estimate,
se_ate = se_ate,
# lower_ci = conf.int[1],
# upper_ci = conf.int[2],
method.name = method.name
)
Return.obj
